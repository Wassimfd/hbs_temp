$primary-color: #000;

$btn--theme: (
	"theme-primary-color": $primary-color
);


$btn: (
	"position": relative,
	"display": inline-block,
	"padding": 1em 2em,
	"text-decoration": none,
	"color": inherit,
	"modifier": 
		(	
			"primary": 
				(
					"background-color": map-get($btn--theme, "theme-primary-color"),
					"color": #fff,
					"font-size": 1em
				),
			"secondary": 
				(
					"background-color": #fff,
					"color": #000,
					"font-size": .7em
				),
			"disabled": 
				(
					"background-color": rgba(0,0,0, .5),
					"color": #fff,
					"pointer-events": none
				)
		)
);

@mixin applyCSS($a, $b) {
	#{$a}: #{$b};
}

@mixin button($theme: $btn) {
	$root: &;
	position: map-get($theme, "position");
	display: map-get($theme, "display");
	&__link {
		display: block;
		padding: map-get($theme, "padding");
		text-decoration: map-get($theme, "text-decoration");
		color: map-get($theme, "color");
	}

	// Modifiers styling to be defined in theme map
	@each $mod, $mod-name in map-get($theme, "modifier") {
		&--#{$mod} {
			@each $key, $value in $mod-name {
				@include applyCSS($key, $value);
			}
		}
	}
}

.button { @include button(); }